type Account @entity {
  id: ID! # account address
  # Profile
  profileId: String!
  profileCreatedTimestamp: BigInt!
  profileUri: String!
  # Reputation
  achievedGoals: BigInt!
  failedGoals: BigInt!
  motivatedGoals: BigInt!
  notMotivatedGoals: BigInt!
}

type Goal @entity {
  id: ID! # token id
  # Params
  createdTimestamp: BigInt!
  description: String!
  authorAddress: String!
  authorStake: BigInt!
  deadlineTimestamp: BigInt!
  isClosed: Boolean!
  isAchieved: Boolean!
  verificationRequirement: String!
  # Motivators
  motivators: [GoalMotivator!]! @derivedFrom(field: "goal")
  motivatorAddresses: [String!]!
  motivatorsNumber: Int!
  acceptedMotivatorAddresses: [String!]!
  # Steps
  steps: [GoalStep!]! @derivedFrom(field: "goal")
}

type GoalMotivator @entity {
  id: ID! # combination of goal id and account address
  goal: Goal!
  addedTimestamp: BigInt!
  accountAddress: String!
  isAccepted: Boolean!
}

type GoalStep @entity {
  id: ID! # combination of goal id and event transaction hash
  goal: Goal!
  createdTimestamp: BigInt!
  authorAddress: String!
  type: String!
  extraData: String!
  extraDataUri: String!
}
